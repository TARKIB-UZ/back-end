basePath: /v1
definitions:
  entity.User:
    properties:
      access_token:
        type: string
      avatar:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      nickname:
        type: string
      password:
        type: string
      phone_number:
        type: string
    type: object
  models.ForgotPasswordRequest:
    properties:
      phone_number:
        type: string
    type: object
  models.LoginRequest:
    properties:
      nickname:
        type: string
      password:
        type: string
      phone_number:
        type: string
    type: object
  models.LoginResponse:
    properties:
      access_token:
        type: string
      user:
        $ref: '#/definitions/models.LoginUser'
    type: object
  models.LoginUser:
    properties:
      avatar:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      nickName:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
    type: object
  models.RegisterUser:
    properties:
      avatar:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      nickname:
        type: string
      password:
        type: string
      phone_number:
        type: string
    type: object
  models.ResetPasswordRequest:
    properties:
      code:
        type: string
      new_password:
        type: string
      phone_number:
        type: string
    type: object
  models.ResetPasswordResponse:
    properties:
      message:
        type: string
    type: object
  models.VerifyUser:
    properties:
      code:
        type: string
      phone_number:
        type: string
    type: object
  models.VerifyUserResponse:
    properties:
      user:
        $ref: '#/definitions/entity.User'
    type: object
  v1.response:
    properties:
      error:
        example: message
        type: string
    type: object
info:
  contact: {}
  description: Backend team - Nodirbek, Dostonbek
  title: tarkib.uz back-end
  version: "1.0"
paths:
  /auth/forgot:
    post:
      consumes:
      - application/json
      deprecated: true
      description: Initiates the password reset process by sending a reset code to
        the user's phone number.
      operationId: forgot-password
      parameters:
      - description: Phone number
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ForgotPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: Forgot Password
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns an access token on successful
        login.
      operationId: login-user
      parameters:
      - description: Nickname or Phone Number and Password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: Login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Registers a new user
      operationId: register-user
      parameters:
      - description: User credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RegisterUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegisterUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: Register
      tags:
      - auth
  /auth/reset:
    post:
      consumes:
      - application/json
      deprecated: true
      description: Resets the user's password using the provided reset code and new
        password.
      operationId: reset-password
      parameters:
      - description: Phone number, reset code, and new password
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.ResetPasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResetPasswordResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: Reset Password
      tags:
      - auth
  /auth/verify:
    post:
      consumes:
      - application/json
      description: After register, user must be verified.
      operationId: verify-user
      parameters:
      - description: One time code and phone number
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.VerifyUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.VerifyUserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
      summary: Verify
      tags:
      - auth
  /file/upload:
    post:
      consumes:
      - application/json
      description: Api for image upload
      parameters:
      - description: Image
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Image upload
      tags:
      - file-upload
schemes:
- http
security:
- BearerAuth: []
- ApiKeyAuth: []
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-API-Key
    type: apiKey
swagger: "2.0"
